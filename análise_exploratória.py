# -*- coding: utf-8 -*-
"""Análise_Exploratória.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E98KVBDgAC3_1l2S_VaJ2DiLWKbOrhIg
"""

import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn")

#upload de arquivo da microsoft
from google.colab import files
arq = files.upload()

#criando nosso DataFrame
df = pd.read_excel("AdventureWorks.xlsx")

#visualizando as 5 primeiras linhas
df.head()

#Quantidade de Linhas e Colunas
df.shape

#verificando os tipos de dados
df.dtypes

#Qual a receita total?
df["Valor Venda"].sum()

#qual o custo total? primeira mente vamos criar uma nova coluna chamada custo e depois fazer a multiplicaçao
# do campo [Custo unuitário] x [qunatidade] e vamos atribuir esse valor ao novo campo criado chamado de[custo]
df["custo"] = df["Custo Unitário"].mul(df["Quantidade"])

df.head(1)

#Agora que temos  a receita e o custo total, podemos achar o LUCRO TOTAL
#vamos criar uma coluna de LUCRO que será (Receita - Custo)
df["Lucro"] = df["Valor Venda"] - df["custo"]

df.head(1)

#Achando o custo total, com um arredondamento de 2 casas decimais
round(df["custo"].sum(),2)

round(df["Lucro"].sum(),2)

#Verificando quanto tempo se passou entre a venda e o envio do produto
#Vamos criar um coluna chamada (Tempo_envio)
df["Tempo_envio"] = df['Data Envio'] - df['Data Venda']

df.head(1)

#Tranformando a coluna [Tempo_envio] em apenas numérica
df["Tempo_envio"] = (df["Data Envio"] - df["Data Venda"]).dt.days

df.head(1)

#Verificando o tipo de coluna Tempo_envio
df["Tempo_envio"].dtypes

#Média de tempo de envio por marca
df.groupby("Marca")["Tempo_envio"].mean()

#verificando de temos intes faltantes
df.isnull().sum()

#Lucro por ano e por marca
#vamos agrupar por ano e marca
df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum()

pd.options.display.float_format = '{:20,.2f}'.format

#Resetando o  index
lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum().reset_index()
lucro_ano

#Qual o total de produtos vendidos?
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending =False)

#Gráfico com o Total de Produtos Vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending =True).plot.barh(title="Total de Produtos Vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

#GRáfio de Lucro por Ano
df.groupby(df["Data Venda"].dt.year)["Lucro"].sum().plot.bar(title ="Lucro x Ano")
plt.xlabel("Ano")
plt.ylabel("Receita");

df_2009 = df[df["Data Venda"].dt.year == 2009]

df_2009.head()

df_2009.groupby(df_2009["Data Venda"].dt.month)["Lucro"].sum().plot(title ="Lucro x Mês")
plt.xlabel("Mês")
plt.ylabel("Lucro");



df_2009.groupby("Marca")["Lucro"].sum().plot.bar(title ="Lucro x Marca")
plt.xlabel("Marca")
plt.ylabel("Lucro")
plt.xticks(rotation ='horizontal');

df_2009.groupby("Classe")["Lucro"].sum().plot.bar(title ="Lucro x Classe")
plt.xlabel("Classe")
plt.ylabel("Lucro")
plt.xticks(rotation ='horizontal');

#Algumas análises estatísticas da base de dados utilizando o comando "DESCRIBE"
df["Tempo_envio"].describe()

#Gráfico de Boxplot
plt.boxplot(df["Tempo_envio"]);

#Histograma
plt.hist(df["Tempo_envio"])

df["Tempo_envio"].min()

df["Tempo_envio"].max()

df[df["Tempo_envio"]==20]

df.to_csv("df_vendas_novo.csv", index=False)

df.to_excel("df_vendas_novo.xlsx", index=False)